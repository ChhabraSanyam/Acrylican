{
  "dependencies": [
    {
      "status": "error",
      "message": "Failed to parse safety output"
    }
  ],
  "configuration": [
    {
      "status": "fail",
      "check": "JWT Secret",
      "message": "Using default JWT secret key - CRITICAL SECURITY RISK",
      "severity": "critical"
    },
    {
      "status": "warning",
      "check": "Database",
      "message": "Using SQLite - not recommended for production",
      "severity": "medium"
    },
    {
      "status": "pass",
      "check": "CORS",
      "message": "CORS properly configured for 1 origins"
    },
    {
      "status": "pass",
      "check": "Environment",
      "message": "Environment set to development"
    },
    {
      "status": "pass",
      "check": "File Upload",
      "message": "File upload properly configured (10.0MB limit)"
    },
    {
      "status": "pass",
      "check": "Rate Limiting",
      "message": "Rate limiting properly configured"
    }
  ],
  "code_analysis": [
    {
      "status": "error",
      "message": "Failed to parse bandit output"
    }
  ],
  "api_security": [
    {
      "status": "warning",
      "check": "Authentication Endpoints",
      "message": "Missing security features: rate limiting",
      "severity": "medium"
    },
    {
      "status": "pass",
      "check": "Input Validation",
      "message": "Comprehensive input validation implemented"
    },
    {
      "status": "pass",
      "check": "Error Handling",
      "message": "Error handling properly configured"
    },
    {
      "status": "warning",
      "check": "Security Headers",
      "message": "Missing security headers: X-Content-Type-Options, X-Frame-Options, Content-Security-Policy, Strict-Transport-Security",
      "severity": "medium"
    }
  ],
  "database": [
    {
      "status": "warning",
      "check": "Database Connection",
      "message": "Using SQLite - ensure file permissions are secure",
      "severity": "low"
    },
    {
      "status": "pass",
      "check": "SQL Injection Protection",
      "message": "Using SQLAlchemy ORM for SQL injection protection"
    },
    {
      "status": "pass",
      "check": "Data Encryption",
      "message": "Token encryption implemented"
    }
  ],
  "overall_score": 33.3,
  "summary": {
    "total_checks": 15,
    "passed_checks": 8,
    "critical_failures": 1,
    "score": 33.3,
    "grade": "F"
  }
}